{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharaddu\\\\Documents\\\\pgapp\\\\src\\\\feature\\\\roomdetails\\\\Roomdetaillist.js\";\nimport React, { Component } from 'react';\nexport default class Roomdetaillist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.isChecked = event => {\n      this.setState({\n        isCheck: !this.state.isCheck\n      });\n    };\n\n    this.signal = event => {\n      this.setState({\n        signal: !this.state.signal\n      });\n    };\n\n    this.handleOptionClick = (index, event) => {\n      // this.refs.btn.setAttribute(\"disabled\", \"disabled\");\n      this.setState(oldState => {\n        const newDisabledButtons = [...oldState.disabledButtons];\n        newDisabledButtons[index] = true;\n        return {\n          disabledButtons: newDisabledButtons\n        };\n      });\n    };\n\n    this.state = {\n      isCheck: false,\n      signal: false,\n      disabledButtons: []\n    };\n  }\n\n  // onClick={(event)=>this.handleOptionClick(key1,event)}\n  // disabled={this.state.disabledButtons[key1]}\n  componentDidMount() {\n    disabledButtons: new Array(2).fill(true);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.data.pg_id != nextProps.pg_id) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    let message;\n\n    if (this.state.signal) {\n      message = 'Now select Aminities';\n    } else {\n      message = 'Select Room First';\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, message)), (console.log('rooms'), console.log(this.props.data.optional_amenities)));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/sharaddu/Documents/pgapp/src/feature/roomdetails/Roomdetaillist.js"],"names":["React","Component","Roomdetaillist","constructor","props","isChecked","event","setState","isCheck","state","signal","handleOptionClick","index","oldState","newDisabledButtons","disabledButtons","componentDidMount","Array","fill","shouldComponentUpdate","nextProps","nextState","data","pg_id","render","message","console","log","optional_amenities"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AAClDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,SATmB,GASNC,KAAD,IAAU;AAClB,WAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAAtB,OAAd;AACH,KAXkB;;AAAA,SAYnBE,MAZmB,GAYTJ,KAAD,IAAU;AACf,WAAKC,QAAL,CAAc;AAACG,QAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAArB,OAAd;AACH,KAdkB;;AAAA,SAenBC,iBAfmB,GAeD,CAACC,KAAD,EAAON,KAAP,KAAe;AAC7B;AACA,WAAKC,QAAL,CAAcM,QAAQ,IAAI;AACtB,cAAMC,kBAAkB,GAAG,CAAC,GAAGD,QAAQ,CAACE,eAAb,CAA3B;AACAD,QAAAA,kBAAkB,CAACF,KAAD,CAAlB,GAA4B,IAA5B;AACA,eAAO;AACLG,UAAAA,eAAe,EAAED;AADZ,SAAP;AAGD,OANH;AAOH,KAxBkB;;AAGf,SAAKL,KAAL,GAAa;AACRD,MAAAA,OAAO,EAAE,KADD;AAERE,MAAAA,MAAM,EAAE,KAFA;AAGRK,MAAAA,eAAe,EAAE;AAHT,KAAb;AAKH;;AAiBD;AACA;AACAC,EAAAA,iBAAiB,GAAG;AAChBD,IAAAA,eAAe,EAAE,IAAIE,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,IAAlB;AACpB;;AACDC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACvC,QAAG,KAAKjB,KAAL,CAAWkB,IAAX,CAAgBC,KAAhB,IAAuBH,SAAS,CAACG,KAApC,EAA0C;AACtC,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,QAAIC,OAAJ;;AACA,QAAG,KAAKhB,KAAL,CAAWC,MAAd,EAAqB;AACnBe,MAAAA,OAAO,GAAC,sBAAR;AACD,KAFD,MAGK;AACHA,MAAAA,OAAO,GAAC,mBAAR;AACD;;AACD,WACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQA,OAAR,CAAR,CADJ,GAGQC,OAAO,CAACC,GAAR,CAAY,OAAZ,GACAD,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWkB,IAAX,CAAgBM,kBAA5B,CAJR,EADJ;AAwCH;;AArFiD","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Roomdetaillist extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             isCheck: false,\r\n             signal: false,\r\n             disabledButtons: [],\r\n        }\r\n    }\r\n    isChecked = (event) =>{\r\n        this.setState({isCheck: !this.state.isCheck});\r\n    }\r\n    signal = (event) =>{\r\n        this.setState({signal: !this.state.signal});\r\n    }\r\n    handleOptionClick=(index,event)=>{\r\n        // this.refs.btn.setAttribute(\"disabled\", \"disabled\");\r\n        this.setState(oldState => {\r\n            const newDisabledButtons = [...oldState.disabledButtons];\r\n            newDisabledButtons[index] = true;\r\n            return {\r\n              disabledButtons: newDisabledButtons,\r\n            }\r\n          })\r\n    }\r\n    // onClick={(event)=>this.handleOptionClick(key1,event)}\r\n    // disabled={this.state.disabledButtons[key1]}\r\n    componentDidMount (){\r\n        disabledButtons: new Array(2).fill(true)\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        if(this.props.data.pg_id!=nextProps.pg_id){\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    render() {\r\n        let message\r\n        if(this.state.signal){\r\n          message='Now select Aminities'\r\n        }\r\n        else {\r\n          message='Select Room First'\r\n        }\r\n        return (\r\n            <>\r\n                <center><label>{message}</label></center>\r\n                {\r\n                    console.log('rooms'),\r\n                    console.log(this.props.data.optional_amenities)\r\n                }\r\n                {\r\n                    // this.props.data.rooms.map(data=>(\r\n                    //     <li>{data.room_id}</li>\r\n                    // ))\r\n                }\r\n                {/* {\r\n                  this.props.data.rooms.map((data,key)=>(\r\n                    <div className=\"dropdown\">\r\n                        <button className=\"dropbtn\" key={key}>\r\n                                    {this.props.data.rooms[data].room_id}</button>\r\n                        <div className=\"dropdown-content\">\r\n                        {\r\n                            this.props.data.rooms[data].bedList.map((d,key1)=>(\r\n                                        <a href=\"#\"\r\n                                            onClick={(event)=>this.props.addBed(this.props.data.rooms[data].bedList[d],this.props.data.rooms[data].rent_per_bed)}\r\n                                            >{this.props.data.rooms[data].bedList[d].bed_id}</a>                          \r\n                            ))\r\n                        }\r\n                        </div>\r\n                   </div>))\r\n                } */}\r\n                {/* <div className=\"amini-block\">\r\n                {\r\n                    this.props.data.optionalAmenities.map((data,key)=>(\r\n                        \r\n                        <label className=\"amini-container\">{this.props.data.optionalAmenities[data].name}\r\n                        <input type=\"checkbox\" onClick={()=>this.props.addAmin(this.props.data.optionalAmenities[data])} onChange={this.isChecked} value={this.state.isCheck}/><span className=\"checkmark\"></span>\r\n                        </label>\r\n                    ))\r\n                }\r\n                </div> */}\r\n            </>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}