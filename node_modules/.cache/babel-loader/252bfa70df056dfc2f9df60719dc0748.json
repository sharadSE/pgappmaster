{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\sharaddu\\\\Documents\\\\pgapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nconst initialState = {\n  bedList: [],\n  aminList: [],\n  bedprice: 0,\n  aminprice: 0,\n  totalprice: 0,\n  isCartEmpty: true,\n  cartList: [],\n  cartCount: 0\n};\nexport default function bedBookingReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'ADD_BED':\n      {\n        const id = action.payload.id;\n        const cartList = state.cartList,\n              bedList = state.bedList,\n              cartCount = state.cartCount;\n        let bedToAdd = cartList[id];\n        let count;\n\n        if (!bedToAdd) {\n          bedToAdd = bedList.find(obj => obj.id === id);\n          count = 1;\n        } else {\n          count = bedToAdd.count + 1;\n        }\n\n        const pid = bedToAdd.bed_id;\n\n        const newCart = _objectSpread({}, state.cartList, {\n          [pid]: _objectSpread({}, bedToAdd, {\n            count\n          })\n        });\n\n        const newcount = cartCount + 1;\n        return _objectSpread({}, state, {\n          cartList: newCart,\n          cartCount: newcount\n        });\n      }\n\n    case 'ADD_AMIN':\n      return _objectSpread({}, state, {\n        aminprice: state.aminprice + action.payload.charge,\n        aminList: state.aminList.concat(action.payload)\n      });\n\n    case 'BOOK_BED':\n      return _objectSpread({}, state, {\n        totalprice: state.bedprice + state.aminprice,\n        bookingCount: state.bookingCount + 1\n      });\n\n    case 'ADD_PRICE':\n      return _objectSpread({}, state, {\n        totalprice: state.aminprice\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/sharaddu/Documents/pgapp/src/reducer/bedBookingReducer.js"],"names":["initialState","bedList","aminList","bedprice","aminprice","totalprice","isCartEmpty","cartList","cartCount","bedBookingReducer","state","action","type","id","payload","bedToAdd","count","find","obj","pid","bed_id","newCart","newcount","charge","concat","bookingCount"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAG,EADO;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,QAAQ,EAAE,CAHO;AAIjBC,EAAAA,SAAS,EAAE,CAJM;AAKjBC,EAAAA,UAAU,EAAE,CALK;AAMjBC,EAAAA,WAAW,EAAE,IANI;AAOjBC,EAAAA,QAAQ,EAAE,EAPO;AAQjBC,EAAAA,SAAS,EAAE;AARM,CAArB;AAWA,eAAe,SAASC,iBAAT,CAA2BC,KAAK,GAAGV,YAAnC,EAAiDW,MAAjD,EAAwD;AACnE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,SAAL;AAAgB;AAAA,cACRC,EADQ,GACDF,MAAM,CAACG,OADN,CACRD,EADQ;AAAA,cAERN,QAFQ,GAEyBG,KAFzB,CAERH,QAFQ;AAAA,cAEEN,OAFF,GAEyBS,KAFzB,CAEET,OAFF;AAAA,cAEWO,SAFX,GAEyBE,KAFzB,CAEWF,SAFX;AAIhB,YAAIO,QAAQ,GAAGR,QAAQ,CAACM,EAAD,CAAvB;AACA,YAAIG,KAAJ;;AACA,YAAI,CAACD,QAAL,EAAe;AACbA,UAAAA,QAAQ,GAAGd,OAAO,CAACgB,IAAR,CAAaC,GAAG,IAAIA,GAAG,CAACL,EAAJ,KAAWA,EAA/B,CAAX;AACAG,UAAAA,KAAK,GAAG,CAAR;AACD,SAHD,MAGO;AACLA,UAAAA,KAAK,GAAGD,QAAQ,CAACC,KAAT,GAAiB,CAAzB;AACD;;AACD,cAAMG,GAAG,GAAGJ,QAAQ,CAACK,MAArB;;AACA,cAAMC,OAAO,qBAAQX,KAAK,CAACH,QAAd;AAAwB,WAACY,GAAD,qBAAYJ,QAAZ;AAAsBC,YAAAA;AAAtB;AAAxB,UAAb;;AACA,cAAMM,QAAQ,GAAGd,SAAS,GAAG,CAA7B;AACA,iCAAYE,KAAZ;AAAmBH,UAAAA,QAAQ,EAAEc,OAA7B;AAAsCb,UAAAA,SAAS,EAAEc;AAAjD;AACC;;AACD,SAAK,UAAL;AACI,+BACOZ,KADP;AAEIN,QAAAA,SAAS,EAAEM,KAAK,CAACN,SAAN,GAAkBO,MAAM,CAACG,OAAP,CAAeS,MAFhD;AAGIrB,QAAAA,QAAQ,EAAEQ,KAAK,CAACR,QAAN,CAAesB,MAAf,CAAsBb,MAAM,CAACG,OAA7B;AAHd;;AAKJ,SAAK,UAAL;AACI,+BACOJ,KADP;AAEIL,QAAAA,UAAU,EAAEK,KAAK,CAACP,QAAN,GAAiBO,KAAK,CAACN,SAFvC;AAGIqB,QAAAA,YAAY,EAAEf,KAAK,CAACe,YAAN,GAAqB;AAHvC;;AAKJ,SAAK,WAAL;AACI,+BACOf,KADP;AAEQL,QAAAA,UAAU,EAAEK,KAAK,CAACN;AAF1B;;AAIJ;AAAS,aAAOM,KAAP;AAnCb;AAqCH","sourcesContent":["const initialState = {\r\n    bedList : [],\r\n    aminList: [],\r\n    bedprice: 0,\r\n    aminprice: 0,\r\n    totalprice: 0,\r\n    isCartEmpty: true,\r\n    cartList: [],\r\n    cartCount: 0,\r\n}\r\n\r\nexport default function bedBookingReducer(state = initialState, action){\r\n    switch(action.type){\r\n        case 'ADD_BED': {\r\n        const { id } = action.payload;\r\n        const { cartList, bedList, cartCount } = state;\r\n  \r\n        let bedToAdd = cartList[id];\r\n        let count;\r\n        if (!bedToAdd) {\r\n          bedToAdd = bedList.find(obj => obj.id === id);\r\n          count = 1;\r\n        } else {\r\n          count = bedToAdd.count + 1;\r\n        }\r\n        const pid = bedToAdd.bed_id;\r\n        const newCart = { ...state.cartList, [pid]: { ...bedToAdd, count } };\r\n        const newcount = cartCount + 1;\r\n        return { ...state, cartList: newCart, cartCount: newcount };\r\n        }\r\n        case 'ADD_AMIN' :\r\n            return {\r\n                ...state,\r\n                aminprice: state.aminprice + action.payload.charge,\r\n                aminList: state.aminList.concat(action.payload),\r\n            }\r\n        case 'BOOK_BED' :\r\n            return {\r\n                ...state,\r\n                totalprice: state.bedprice + state.aminprice,\r\n                bookingCount: state.bookingCount + 1,\r\n            }\r\n        case 'ADD_PRICE' :\r\n            return {\r\n                ...state,\r\n                    totalprice: state.aminprice\r\n            }\r\n        default: return state     \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}