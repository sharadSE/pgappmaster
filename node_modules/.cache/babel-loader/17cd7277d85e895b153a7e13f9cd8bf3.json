{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\sharaddu\\\\Documents\\\\pgapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nconst initialState = {\n  bedList: [],\n  aminList: [],\n  bookingCount: 0,\n  bedprice: 0,\n  aminprice: 0,\n  totalprice: 0,\n  bedCount: 0,\n  temporary_value: 3\n};\nexport default function bedBookingReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'ADD_BED':\n      const id = action.payload.bed_id.id;\n      const bedList = state.bedList,\n            bedprice = state.bedprice,\n            bookingCount = state.bookingCount;\n      let bedtoAdd = bedList[id];\n      let count;\n\n      if (!bedtoAdd) {\n        bedtoAdd = bedList.find(obj => obj.id === id);\n        count = 1;\n      } else {\n        count = bedtoAdd.count + 1;\n      }\n\n      const bid = bedtoAdd.id;\n\n      const newCart = _objectSpread({}, state.bedList, {\n        [pid]: _objectSpread({}, bedtoAdd, {\n          count\n        })\n      });\n\n      const newCount = cartCount + 1;\n      return _objectSpread({}, state, {\n        bedList: newCart,\n        cartCount: mewCount,\n        bedprice: state.bedprice + action.payload.price\n      });\n\n    case 'ADD_AMIN':\n      return _objectSpread({}, state, {\n        aminprice: state.aminprice + action.payload.charge,\n        aminList: state.aminList.concat(action.payload)\n      });\n\n    case 'BOOK_BED':\n      return _objectSpread({}, state, {\n        totalprice: state.bedprice + state.aminprice,\n        bookingCount: state.bookingCount + 1\n      });\n\n    case 'ADD_PRICE':\n      return _objectSpread({}, state, {\n        totalprice: state.aminprice\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/sharaddu/Documents/pgapp/src/reducer/bedBookingReducer.js"],"names":["initialState","bedList","aminList","bookingCount","bedprice","aminprice","totalprice","bedCount","temporary_value","bedBookingReducer","state","action","type","id","payload","bed_id","bedtoAdd","count","find","obj","bid","newCart","pid","newCount","cartCount","mewCount","price","charge","concat"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAG,EADO;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,YAAY,EAAG,CAHE;AAIjBC,EAAAA,QAAQ,EAAE,CAJO;AAKjBC,EAAAA,SAAS,EAAE,CALM;AAMjBC,EAAAA,UAAU,EAAE,CANK;AAOjBC,EAAAA,QAAQ,EAAE,CAPO;AAQjBC,EAAAA,eAAe,EAAE;AARA,CAArB;AAYA,eAAe,SAASC,iBAAT,CAA2BC,KAAK,GAAGV,YAAnC,EAAiDW,MAAjD,EAAwD;AACnE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,SAAL;AAAA,YACmBC,EADnB,GACyBF,MAAM,CAACG,OAAP,CAAeC,MADxC,CACmBF,EADnB;AAAA,YAEoBZ,OAFpB,GAEuDS,KAFvD,CAEoBT,OAFpB;AAAA,YAE6BG,QAF7B,GAEuDM,KAFvD,CAE6BN,QAF7B;AAAA,YAEsCD,YAFtC,GAEuDO,KAFvD,CAEsCP,YAFtC;AAGY,UAAIa,QAAQ,GAAGf,OAAO,CAACY,EAAD,CAAtB;AACA,UAAII,KAAJ;;AACA,UAAG,CAACD,QAAJ,EAAa;AACTA,QAAAA,QAAQ,GAAGf,OAAO,CAACiB,IAAR,CAAaC,GAAG,IAAGA,GAAG,CAACN,EAAJ,KAAWA,EAA9B,CAAX;AACII,QAAAA,KAAK,GAAG,CAAR;AACP,OAHD,MAII;AACAA,QAAAA,KAAK,GAAGD,QAAQ,CAACC,KAAT,GAAiB,CAAzB;AACH;;AACD,YAAMG,GAAG,GAAGJ,QAAQ,CAACH,EAArB;;AACA,YAAMQ,OAAO,qBACNX,KAAK,CAACT,OADA;AACS,SAACqB,GAAD,qBAAWN,QAAX;AAAqBC,UAAAA;AAArB;AADT,QAAb;;AAGA,YAAMM,QAAQ,GAAGC,SAAS,GAAG,CAA7B;AACP,+BACOd,KADP;AAEIT,QAAAA,OAAO,EAAEoB,OAFb;AAGIG,QAAAA,SAAS,EAAEC,QAHf;AAIIrB,QAAAA,QAAQ,EAAEM,KAAK,CAACN,QAAN,GAAiBO,MAAM,CAACG,OAAP,CAAeY;AAJ9C;;AAML,SAAK,UAAL;AACI,+BACOhB,KADP;AAEIL,QAAAA,SAAS,EAAEK,KAAK,CAACL,SAAN,GAAkBM,MAAM,CAACG,OAAP,CAAea,MAFhD;AAGIzB,QAAAA,QAAQ,EAAEQ,KAAK,CAACR,QAAN,CAAe0B,MAAf,CAAsBjB,MAAM,CAACG,OAA7B;AAHd;;AAKJ,SAAK,UAAL;AACI,+BACOJ,KADP;AAEIJ,QAAAA,UAAU,EAAEI,KAAK,CAACN,QAAN,GAAiBM,KAAK,CAACL,SAFvC;AAGIF,QAAAA,YAAY,EAAEO,KAAK,CAACP,YAAN,GAAqB;AAHvC;;AAKJ,SAAK,WAAL;AACI,+BACOO,KADP;AAEQJ,QAAAA,UAAU,EAAEI,KAAK,CAACL;AAF1B;;AAIJ;AAAS,aAAOK,KAAP;AAzCb;AA2CH","sourcesContent":["const initialState = {\r\n    bedList : [],\r\n    aminList: [],\r\n    bookingCount : 0,\r\n    bedprice: 0,\r\n    aminprice: 0,\r\n    totalprice: 0,\r\n    bedCount: 0,\r\n    temporary_value: 3,\r\n    \r\n}\r\n\r\nexport default function bedBookingReducer(state = initialState, action){\r\n    switch(action.type){\r\n        case 'ADD_BED': \r\n                    const {id} = action.payload.bed_id\r\n                    const { bedList, bedprice,bookingCount } = state\r\n                    let bedtoAdd = bedList[id]\r\n                    let count\r\n                    if(!bedtoAdd){\r\n                        bedtoAdd = bedList.find(obj =>obj.id === id)\r\n                            count = 1\r\n                    }\r\n                    else{\r\n                        count = bedtoAdd.count + 1\r\n                    }\r\n                    const bid = bedtoAdd.id\r\n                    const newCart = {\r\n                        ...state.bedList, [pid]: {...bedtoAdd, count}\r\n                    }\r\n                    const newCount = cartCount + 1\r\n             return {\r\n                 ...state,\r\n                 bedList: newCart,\r\n                 cartCount: mewCount,\r\n                 bedprice: state.bedprice + action.payload.price\r\n             }\r\n        case 'ADD_AMIN' :\r\n            return {\r\n                ...state,\r\n                aminprice: state.aminprice + action.payload.charge,\r\n                aminList: state.aminList.concat(action.payload),\r\n            }\r\n        case 'BOOK_BED' :\r\n            return {\r\n                ...state,\r\n                totalprice: state.bedprice + state.aminprice,\r\n                bookingCount: state.bookingCount + 1,\r\n            }\r\n        case 'ADD_PRICE' :\r\n            return {\r\n                ...state,\r\n                    totalprice: state.aminprice\r\n            }\r\n        default: return state     \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}