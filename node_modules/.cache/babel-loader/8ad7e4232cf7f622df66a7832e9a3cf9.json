{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\sharaddu\\\\Documents\\\\pgapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nconst initialState = {\n  bedList: [],\n  aminList: [],\n  bookingCount: 0,\n  bedprice: 0,\n  aminprice: 0,\n  totalprice: 0,\n  temporary_value: 3\n};\nexport function addtoBed(arr, obj) {\n  var existingIds = arr.map(obj => obj.bed_id);\n\n  if (!existingIds.includes(obj.bed_id)) {\n    arr.push(obj);\n  } else {\n    arr.forEach((element, index) => {\n      if (element.id === obj.id) {\n        arr[index] = obj;\n      }\n    });\n  }\n\n  return arr;\n}\nexport default function bedBookingReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'ADD_BED':\n      {\n        // if(state.bedList.indexOf(action.payload) < -1)\n        return _objectSpread({}, state, {\n          bedList: state.bedList.concat(action.payload),\n          bedList: addtoBed(bedList, action.payload),\n          bedprice: state.bedprice + action.payload.price\n        });\n      }\n\n    case 'ADD_AMIN':\n      return _objectSpread({}, state, {\n        aminprice: state.aminprice + action.payload.charge,\n        aminList: state.aminList.concat(action.payload)\n      });\n\n    case 'BOOK_BED':\n      return _objectSpread({}, state, {\n        totalprice: state.bedprice + state.aminprice,\n        bookingCount: state.bookingCount + 1\n      });\n\n    case 'ADD_PRICE':\n      return _objectSpread({}, state, {\n        totalprice: state.aminprice\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/sharaddu/Documents/pgapp/src/reducer/bedBookingReducer.js"],"names":["initialState","bedList","aminList","bookingCount","bedprice","aminprice","totalprice","temporary_value","addtoBed","arr","obj","existingIds","map","bed_id","includes","push","forEach","element","index","id","bedBookingReducer","state","action","type","concat","payload","price","charge"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAG,EADO;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,YAAY,EAAG,CAHE;AAIjBC,EAAAA,QAAQ,EAAE,CAJO;AAKjBC,EAAAA,SAAS,EAAE,CALM;AAMjBC,EAAAA,UAAU,EAAE,CANK;AAOjBC,EAAAA,eAAe,EAAE;AAPA,CAArB;AASA,OAAO,SAASC,QAAT,CAAoBC,GAApB,EAAyBC,GAAzB,EAA+B;AAGlC,MAAIC,WAAW,GAAGF,GAAG,CAACG,GAAJ,CAASF,GAAD,IAASA,GAAG,CAACG,MAArB,CAAlB;;AAEE,MAAI,CAAEF,WAAW,CAACG,QAAZ,CAAqBJ,GAAG,CAACG,MAAzB,CAAN,EAAwC;AACtCJ,IAAAA,GAAG,CAACM,IAAJ,CAASL,GAAT;AACD,GAFD,MAEO;AACLD,IAAAA,GAAG,CAACO,OAAJ,CAAY,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC9B,UAAID,OAAO,CAACE,EAAR,KAAeT,GAAG,CAACS,EAAvB,EAA2B;AACzBV,QAAAA,GAAG,CAACS,KAAD,CAAH,GAAaR,GAAb;AACD;AACF,KAJD;AAKD;;AACD,SAAOD,GAAP;AACH;AAEH,eAAe,SAASW,iBAAT,CAA2BC,KAAK,GAAGrB,YAAnC,EAAiDsB,MAAjD,EAAwD;AACnE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,SAAL;AAAgB;AACZ;AACC,iCACOF,KADP;AAEIpB,UAAAA,OAAO,EAAEoB,KAAK,CAACpB,OAAN,CAAcuB,MAAd,CAAqBF,MAAM,CAACG,OAA5B,CAFb;AAGGxB,UAAAA,OAAO,EAAEO,QAAQ,CAACP,OAAD,EAASqB,MAAM,CAACG,OAAhB,CAHpB;AAIIrB,UAAAA,QAAQ,EAAEiB,KAAK,CAACjB,QAAN,GAAiBkB,MAAM,CAACG,OAAP,CAAeC;AAJ9C;AAKE;;AACP,SAAK,UAAL;AACI,+BACOL,KADP;AAEIhB,QAAAA,SAAS,EAAEgB,KAAK,CAAChB,SAAN,GAAkBiB,MAAM,CAACG,OAAP,CAAeE,MAFhD;AAGIzB,QAAAA,QAAQ,EAAEmB,KAAK,CAACnB,QAAN,CAAesB,MAAf,CAAsBF,MAAM,CAACG,OAA7B;AAHd;;AAKJ,SAAK,UAAL;AACI,+BACOJ,KADP;AAEIf,QAAAA,UAAU,EAAEe,KAAK,CAACjB,QAAN,GAAiBiB,KAAK,CAAChB,SAFvC;AAGIF,QAAAA,YAAY,EAAEkB,KAAK,CAAClB,YAAN,GAAqB;AAHvC;;AAKJ,SAAK,WAAL;AACI,+BACOkB,KADP;AAEQf,QAAAA,UAAU,EAAEe,KAAK,CAAChB;AAF1B;;AAIJ;AAAS,aAAOgB,KAAP;AA1Bb;AA4BH","sourcesContent":["const initialState = {\r\n    bedList : [],\r\n    aminList: [],\r\n    bookingCount : 0,\r\n    bedprice: 0,\r\n    aminprice: 0,\r\n    totalprice: 0,\r\n    temporary_value: 3,\r\n}\r\nexport function addtoBed ( arr, obj ) {\r\n\r\n\r\n    var existingIds = arr.map((obj) => obj.bed_id);\r\n  \r\n      if (! existingIds.includes(obj.bed_id)) {\r\n        arr.push(obj);\r\n      } else {\r\n        arr.forEach((element, index) => {\r\n          if (element.id === obj.id) {\r\n            arr[index] = obj;\r\n          }\r\n        })\r\n      }\r\n      return arr\r\n  }\r\n\r\nexport default function bedBookingReducer(state = initialState, action){\r\n    switch(action.type){\r\n        case 'ADD_BED': {\r\n            // if(state.bedList.indexOf(action.payload) < -1)\r\n             return {\r\n                 ...state,\r\n                 bedList: state.bedList.concat(action.payload),\r\n                bedList: addtoBed(bedList,action.payload),\r\n                 bedprice: state.bedprice + action.payload.price\r\n             }}\r\n        case 'ADD_AMIN' :\r\n            return {\r\n                ...state,\r\n                aminprice: state.aminprice + action.payload.charge,\r\n                aminList: state.aminList.concat(action.payload),\r\n            }\r\n        case 'BOOK_BED' :\r\n            return {\r\n                ...state,\r\n                totalprice: state.bedprice + state.aminprice,\r\n                bookingCount: state.bookingCount + 1,\r\n            }\r\n        case 'ADD_PRICE' :\r\n            return {\r\n                ...state,\r\n                    totalprice: state.aminprice\r\n            }\r\n        default: return state     \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}